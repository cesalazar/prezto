#
# ALIASES
#

alias grep='grep -i --color'
alias egrep='egrep -i --color'
alias lgrep='ll | grep -E'
alias lg=lgrep
alias pag="ps aux | grep -v 'grep -i' | grep -E"
alias eng='env | grep'
alias att='tmux attach || tmux'
alias :q='exit'
alias :Q=':q'
alias rell='source ~/.zshrc && rehash && echo "Profile reloaded"'
alias recomp='rm -f ~/.zcompdump && compinit'
alias cls='clear'
alias pacman='pacman --color always'
alias wic='which'
alias ewic='edit-which(){ local app=$(which ${@} | awk ''{print $NF}''); \
  [[ -f ${app} ]] && "${EDITOR:-vim}" "${app}" || echo "${app} not found"; unset -f edit-which; }; edit-which'
alias yd='youtube-dl'
alias mkdin='make-dir(){ local dir="$@"; mkdir -p "${dir}" && cd "${dir}"; unset -f make-dir; }; make-dir'
alias mkdink='make-dir-kebab(){ local dir="${@}"; mkdin "$(echo ${dir// /-} \
  | tr ''[:upper:]'' ''[:lower:]'')"; unset -f make-dir-kebab; }; make-dir-kebab'
alias cd..='cd ..'
alias tree='tree -C'
alias trel='tree | less'
alias sctl=systemctl
alias tdiff=pdd
alias timediff=pdd
alias pwdc='pwd-copy(){ echo "$(pwd -P)/$1" | tr -d "\n" | pbcopy; unset -f pwd-copy; }; pwd-copy'
alias dd='dd status=progress'
alias awl='awless --color always'
alias awlb='awl ls buckets --columns id,created'
alias awli='awl ls instances --columns id,name,state,privateip,uptime --sort name --filter state=running'
alias sx=sxiv
alias vis='vim -S Session.vim'
alias lzd='lazydocker'
alias fda='fd -HI'
alias aga='ag -aU --hidden'
alias stui=s-tui
alias open='xdg-open'
alias oo="spacefm . &> /dev/null &"
alias mirror-screen='xrandr --auto --output DP1-1 --same-as eDP1'
alias top-screen='xrandr --output eDP1 --auto --rotate normal --pos 0x0 --output HDMI2 --auto --rotate normal --above eDP1'
alias fdiff='fancy-diff(){ diff -u "${@}" | diff-so-fancy | less; unset -f fancy-diff; }; fancy-diff'
alias findfont='find-font(){ fc-list | grep "$1" | cut -f2 -d: | cut -c2-; unset -f find-font; }; find-font'
alias ll='ls -alh'
alias lll='ll | less'
alias pt=pritunl-client
alias ptl='pt list'
alias fuzzy-pritunl-connection='fuzzy-pritunl(){ \
  local arg=${1:-start}; local client_id=$(pt list | head -n -1 | fzf --header-lines=3 | awk ''{print $2}''); \
  [[ "${client_id}" ]] || return 0; echo ${client_id} | xargs -I{} bash -c "pritunl-client ${arg} {}"; \
  unset -f fuzzy-pritunl; }; fuzzy-pritunl'
alias ptc='fuzzy-pritunl-connection start'
alias ptd='fuzzy-pritunl-connection stop'
alias lsports='sudo netstat -lntup'
alias editpdf='xournalpp'
alias vactiv='source "$(find . -iwholename "*bin/activate" | head -n1)" &>/dev/null'

# yarn
alias yi="yarn 2> /dev/null"
alias yrn='yarn run'
alias ysb='yrn storybook'
alias ysp='yarn stop'
alias yst='yarn start'

function fzf-node-kill() {
  local pids=
  pids=$(
    ps -eo pid,user,args --sort user \
      | grep -v grep \
      | grep -E "(pnpm|npm|react|yarn|bun)" \
      | fzf \
      | awk '{print $1}'
  )
  [ ! -z ${pids} ] && echo ${pids} | xargs kill
}
alias npk=fzf-node-kill

function list-package-json-entries() {
  local query=${1:-.scripts}
  local file=package.json
  local cmd=cat

  if [[ $(command -v jq) ]]; then
    case ${query} in
      s|scripts) query=".scripts" ;;
      d|dependencies) query=".dependencies" ;;
      D|devDependencies) query=".devDependencies" ;;
    esac
    cmd=(jq -C ${query})
  fi

  if [ -f package.json ]; then
    ${cmd[@]} ${file} | grep -Ev '({|})' | less
  else
    printf "%s\n" "There's no package.json in this directory"
  fi
}
alias np=list-package-json-entries
alias nps="np scripts"
alias npd="np dependencies"
alias npD="np devDependencies"

alias cd='better-cd(){
  local arg=${1};
  [[ ! -d "${1}" ]] && arg="${arg%/*}";
  cd "${arg}";
  unset -f better-cd;
}; better-cd'

# ollama
alias ol=ollama
alias oll='ol list'
alias ols='ol show'
alias olr='ol remove'

# print the dimensions of an image
alias imgsize="ffprobe -v error -select_streams v:0 -show_entries stream=width,height -of csv=s=x:p=0"

[[ $(command -v exa) ]] && alias ll="exa ${EZA_OPTS[@]}"
[[ $(command -v eza) ]] && alias ll="eza ${EZA_OPTS[@]}"
[[ $(command -v bat) ]] && alias cat=bat

# Copy to clipboard in order of preference
[[ $(command -v xsel) ]] && alias pbcopy='xsel -ib'
[[ $(command -v xclip) ]] && alias pbcopy='xclip -selection clipboard -in'

# AUR package managers: paru pikaur trizen yay yaourt
# TODO: FIX: the pager lags hard until Enter is pressed
alias yao='use-yay(){ yay "$@" --color always | bat -p; unset -f use-yay; }; use-yay'
alias yab='yay-bin(){ yay -Ql "$@" | grep -Ev "/usr(/bin)?/$" | grep bin; unset -f yay-bin; }; yay-bin'

# Show zprezto git module aliases
# Use: awk -F'\`' '{ print \$2 }'; to execute the selected command
alias zg="zprezto-git-help(){ cat ~/.zprezto/modules/git/README.md \
  | grep -E '^- \`' | fzf | xargs -I! printf '%s\n' '!'; unset -f zprezto-git-help; }; zprezto-git-help"

# nordvpn
# alias nv='nordvpn'
alias nv='do-nv(){ nordvpn ${@:/st/status}; unset -f do-nv; }; do-nv'
alias nvfw='nv set firewall'
alias nvks='nv set killswitch'
alias nvob='nv set obfuscate'
alias nvst='nv status'

# parse JSON or YAML and pipe it to less
alias catpipe='cat-pipe(){
  local files; files="$(find . -regextype sed -regex "${1}" 2&>/dev/null | fzf --no-multi)"
  [[ -n ${files} ]] || return
  cat "${files}" | ${2} -C ${3} | less
  printf "%s\n" "${files}"
  unset -f cat-pipe; }; cat-pipe'
alias jql='use-catpipe(){ catpipe ".*\.json$" jq ${1}; unset -f use-catpipe; }; use-catpipe'
alias yql='use-catpipe(){ catpipe ".*\.ya\?ml$" yq ${1}; unset -f use-catpipe; }; use-catpipe'

# docker ($dkformat in the exports file!)
alias dk='docker'
alias dkatt='dk attach'
alias dkc='dkcompose(){
  local conf; conf="$(find . -maxdepth 2 -regextype sed -regex ".*docker-compose.ya\?ml$")"
  [[ ${conf} ]] && conf=("-f" "${conf}")
  docker-compose ${conf[@]} ${@}
  unset -f dkcompose; }; dkcompose'
alias dkcps='dkc ps 2&>/dev/null'
alias dki='dk images'
alias dkih='dk image history'
alias dkl='dk logs'
alias dklf='dk logs -f'
alias dkn='dk network'
alias dkpsa='dk ps -a --format "${dkformat}"'
alias dkrm='dk rm'
alias dkrmf='dk rm -f'
alias dkrmi='dk image rm'
alias dkstp='dk stop'
alias dkstr='dk start'
alias dkf='dkfuzzy(){
  local option; option=${@}
  local grep_filter
  [[ ${option} != stop && ${option} != start ]] && \
    echo "Invalid option, use ''start'' or ''stop''" && return 1
  [[ ${option} == stop ]] && grep_filter=("grep" "-iv" "exited")
  [[ ${option} == start ]] && grep_filter=("grep" "-iE" "(exited|NAMES)")
  dkpsa | "${grep_filter[@]}" | fzf --header-lines=1 | awk ''{print $1}''\
    | xargs -I{} docker ${option} {}
  unset -f dkfuzzy; }; dkfuzzy'
alias dkfrm="dkpsa | fzf --header-lines=1 | awk '{print \$1}' | xargs -I{} docker rm {}"
alias dkfrmi="dki | fzf --header-lines=1 | awk '{print \$3}' | xargs -I{} docker rmi {} -f"
alias dkfstp='dkf stop'
alias dkfstr='dkf start'
alias dkv='dk volume'
alias dkip="dk ps --format \"\${dkformat}\" | fzf --header-lines=1 | awk '{print \$1}' \
  | xargs -I{} bash -c 'echo \"Name: {}\"; docker inspect {} | grep -Eo IPAddress.*[0-9]+.* | tr -d ,\\\"; echo' "
alias dkps='dkc-or-dk(){
  # set -uxo pipefail
  conf="$(find . -maxdepth 2 -regextype sed -regex ".*docker-compose.ya\?ml$")"
  [[ $conf && -d .git ]] && dkcps && return 0
  dkpsa; unset -f dkc-or-dk; }; dkc-or-dk'

# stylua
[[ $(command -v stylua) ]] && alias stylua="stylua --config-path=$HOME/.config/stylua/stylua.toml"

# vagrant
alias vah='vagrant halt'
alias vha=vah
alias vssh='vagrant ssh'
alias vst='vagrant status'
alias vup='vagrant up'

# VirtualBox
alias vbm=vboxmanage

# kubectl
alias kc='kubectl'

# path-extractor - https://github.com/edi9999/path-extractor
alias pe=path-extractor

# Use vi keybindings in node REPL
# Requires rlwrap and 'set editing-mode vi' in ~/.inputrc
[[ $(command -v rlwrap) ]] && alias node='NODE_NO_READLINE=1 rlwrap node'

# Use vi keybindings in iPython
alias ipython='ipython2 --TerminalInteractiveShell.editing_mode=vi'
alias ipython3='ipython3 --TerminalInteractiveShell.editing_mode=vi'

# Globals
alias -g L='| less'
alias -g P='| pe | fzf | read filename; [ ! -z $filename ] && vim $filename'
alias -g CP='| pbcopy'

# vim: ft=zsh fdm=manual tabstop=2 softtabstop=2 shiftwidth=2 expandtab:
