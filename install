#!/bin/zsh
#
# This script:
#   - Back ups existing config files if they exist
#   - Symlinks zsh, Prezto, and Powerlevel10k config files
#   - Initializes Prezto external modules (git submodules)
#   - Removes symlinks broken due to not initializing some git submodules

# Debug options
# set -euxo pipefail

# Get the options for this script
while getopts ":dv:" option; do
    case $option in
        d) # (d)evelopment mode - keeps .git files and folders
            printf "%b\n" "\n\033[0;32mDevelopment mode enabled\033[0m"
            enable_dev_mode=true;;
        *)
    esac
done

# Directory where this script resides
base_dir=$(cd "$(dirname "${0}")" &> /dev/null || exit 1; pwd -P)

# File that will contain a backup of the existing config files
backup_file="${base_dir}/prezto-conf-backup-$(date +%Y-%m-%d-%H%M%S).tar"

# Symlinks to remove: Powerlevel10k complains about these symlinks that are
# broken because not all the git submodules are initialized
symlinks_to_remove=(
    async
    prompt_agnoster_setup
    prompt_powerline_setup
    prompt_pure_setup
)

# cd into the $HOME directory
cd "${ZDOTDIR:-$HOME}" || exit 1

# Create a symlink for each config file
setopt EXTENDED_GLOB
for file in "${base_dir}"/runcoms/^README.md(.N); do
    target="${ZDOTDIR:-$HOME}/.${file:t}"

    # Backup existing config file, if it exists, and remove it
    if [[ -e "${target}" ]]; then
        tar rhf "${backup_file}" "${target}" &> /dev/null
        rm -f "${target}"
    fi

    ln -s "${file}" "${target}"
done

# Notify the user about the backup if it was made
if [[ -f "${backup_file}" ]]; then
    printf "%b" """
    \033[0;31mBacking up existing config files before replacing them\033[0m
    Backup created at: ${backup_file}\n
    """ | sed 's~^\s\+~~'
fi

# cd into the directory containing this script
cd "${base_dir}" || exit 1

# Initialize git submodules if they exist
if [[ -d "${base_dir}/.git" && -f "${base_dir}/.gitmodules" ]]; then
    git submodule update --quiet --init
fi

# Install fzf with keybindings and completion
if [[ ! -f "${ZDOTDIR:-$HOME}/.fzf.zsh" ]]; then
    "${base_dir}/complements/fzf/install" \
        --key-bindings --completion --no-bash --no-update-rc
fi

# Remove broken symlinks for prompt module
for symlink in "${symlinks_to_remove[@]}"; do
    symlink="modules/prompt/functions/${symlink}"
    rm -f "${symlink}" &> /dev/null
    # Make git ignore the removed symlinks
    git update-index --assume-unchanged "${symlink}"
done

# Remove .git directories to reduce space used
if [[ ${enable_dev_mode:-false} == false ]]; then
    find "${base_dir}" -iname ".git*" -exec rm -rf {} \; &> /dev/null
fi

# Success!
printf "%b\n" "\n\033[0;32mPrezto config installed\033[0m" \
    "Restart zsh or source ~/.zshrc\n"

exit 0

# vim: fdm=manual tabstop=4 softtabstop=4 shiftwidth=4 expandtab:
